alias rm-merged='git branch --merged | grep -v master | grep -v develop | grep -v "*" | while read BRANCH; do git branch -d ${BRANCH}; done; unset BRANCH;'
gc () {
  git checkout $1
}
gcbf () {
  git checkout -b feature/$1
}
gcb () {
  git checkout -b $1
}
gcm () {
  git commit -m "$*"
}
gcl () {
  branch=`git branch | fzf | sed 's/^[ |\*]*//'`
  if [ -n "$branch" ]; then
    git checkout $branch
  fi
}
gcr () {
  branch=`git branch -r | fzf | sed 's/^[ |\*]*origin\///'`
  if [ -n "$branch" ]; then
    git checkout $branch
  fi
}
alias ga='git add -A && git diff --cached'
alias gcd='git checkout develop && git pull'
alias grh='git reset --hard HEAD'
alias gp='git pull'
alias gpm='git pull upstream master'
alias gs='git status'
alias gu='git submodule update'
alias gl='git log --graph --color=always'
or () {
  remote=`git remote -v | tr '\n' ' ' | awk '{print $2}' | head -1`
  if [ "$remote" = "http*" ]; then
    echo $remote
  else
    echo "$remote" | sed -e "s/git@\(.*\):\(.*\)\.git.*/https:\/\/\1\/\2/"
  fi
}

alias dri='docker rmi $(docker images -f "dangling=true" -qa)'
alias drc='docker rm $(docker ps -aq)'
st () {
  ctags -R --languages=$1 -f $HOME/.tags/$1.tags `pwd`
}
mf () {
  mdfind -onlyin ./ "$*"
}
co () {
  dist=`ls ~/workspace | fzf-tmux`
  if [ -n "$dist" ]; then
    pushd ~/Documents/$dist
  fi
}
vf () {
  file=`find . -name "*.$1" | fzf`
  if [ -n "$file" ]; then
  vim $file
  fi
}
vm () {
  file=`git grep "$1" | fzf | cut -f1 -d:`
  if [ -n "$file" ]; then
    vim $file
  fi
}
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

urlencode () {
  echo "$1" | nkf -WwMQ | tr '\n' % | sed -e "s/=%//g" | sed -e "s/%//g" | tr = %
}

pyv () {
  if [ "$1" = "-i" ]; then
    if [ -n "$2" ]; then
      dist=$2
    else
      dist=`pwd | gsed -e 's/.*\/\(.*\)/\1/'`
    fi
    mkdir -p ~/.pyvenv
    python -m venv ~/.pyvenv/$dist
    source ~/.pyvenv/$dist/bin/activate
    pip install -U pip
    pip install flake8 mypy
  elif [ "$1" = "-l" ]; then
    dist=`ls ~/.pyvenv | fzf-tmux`
    if [ -n "$dist" ]; then
      source ~/.pyvenv/$dist/bin/activate
    fi
  elif [ "$1" = "-a" ]; then
    dist=`pwd | gsed -e 's/.*\/\(.*\)/\1/'`
    if [ -n "$dist" ]; then
      source ~/.pyvenv/$dist/bin/activate
    fi
  elif [ "$1" = "-d" ]; then
    if [ -n "$2" ]; then
      dist=$2
    else
      dist=`pwd | gsed -e 's/.*\/\(.*\)/\1/'`
    fi
    rm -rf ~/.pyvenv/$dist
    echo "delete venv: $dist"
  elif [ -n "$1" ]; then
    source ~/.pyvenv/$1/bin/activate
  else
    echo "Error: you need to specify env name or set option" >&2
  fi
}
tm () {
  tmux -f $SSHHOME/.sshrc.d/.tmux.conf
}
export VIMINIT="let \$MYVIMRC='$SSHHOME/.sshrc.d/.vimrc' | source \$MYVIMRC"
