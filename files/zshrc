export ZSH=$HOME/.oh-my-zsh

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"
# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

DISABLE_AUTO_UPDATE="true"

export EDITOR='vim'

ZSH_THEME="robbyrussell"

plugins=(git brew gulp github fabric npm sbt scala)

export PATH="/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin"
export PATH="$HOME/.rbenv/shims:$PATH"
eval "$(rbenv init -)"

export PATH=$HOME/.nvm/versions/node/`cat $HOME/.nvm/alias/default`/bin:$PATH
nvm() {
  unset -f nvm
  source "$HOME/.nvm/nvm.sh"
  nvm "$@"
}

export PATH="$HOME/.pyenv/shims:$HOME/.pyenv/bin:$PATH"
source $ZSH/oh-my-zsh.sh

### git aliases (comment out aliases in ~/.oh-my-zsh/plugins/git/git.plugin.zsh in advance ###
alias rm-merged='git branch --merged | grep -v master | grep -v develop | grep -v "*" | while read BRANCH; do git branch -d ${BRANCH}; done; unset BRANCH;'
gc () {
  git checkout $1
}
gcbf () {
  git checkout -b feature/$1
}
gcb () {
  git checkout -b $1
}
gcm () {
  git commit -m "$*"
}
gcl() {
  branch=`git branch | fzf | sed 's/^[ |\*]*//'`
  if [ -n "$branch" ]; then
    git checkout $branch
  fi
}
gcr() {
  branch=`git branch -r | fzf | sed 's/^[ |\*]*origin\///'`
  if [ -n "$branch" ]; then
    git checkout $branch
  fi
}
alias ga='git add -A && git diff --cached'
alias gcd='git checkout develop && git pull'
alias grh='git reset --hard HEAD'
alias gp='git pull'
alias gpm='git pull upstream master'
alias gs='git status'
alias gu='git submodule update'
alias gl='git log --graph --color=always'
or () {
    remote=`git remote -v | grep origin | tr '\n' ' ' | awk '{print $2}' | head -1`
    if [ "$remote" = "http*" ]; then
        open $remote
    else
        echo "$remote" | sed -e "s/git@\(.*\):\(.*\)\.git.*/https:\/\/\1\/\2/" | xargs open
    fi
}
### /git aliases ###

alias ctags="`brew --prefix`/bin/ctags"
alias dri='docker rmi $(docker images -f "dangling=true" -qa)'
alias drc='docker rm $(docker ps -aq)'
st () {
  ctags -R --languages=$1 -f $HOME/.tags/$1.tags `pwd`
}
mf () {
  mdfind -onlyin ./ "$*"
}
cop () { cat $1 | pbcopy }
co() {
  dist=`ls ~/Documents | fzf-tmux`
  if [ -n "$dist" ]; then
    pushd ~/Documents/$dist
  fi
}
cd-l() {
  dist=`dirs -l -v | fzf | awk '{print $2}'`
  if [ -n "$dist" ]; then
    pushd $dist
  fi
}
vf() {
  file=`find . -name "*.$1" | fzf`
  if [ -n "$file" ]; then
  vim $file
  fi
}
vm() {
  file=`git grep "$1" | fzf | cut -f1 -d:`
  if [ -n "$file" ]; then
    vim $file
  fi
}
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

urlencode () {
  echo "$1" | nkf -WwMQ | tr '\n' % | sed -e "s/=%//g" | sed -e "s/%//g" | tr = %
}

pyv() {
  dir=`pwd | gsed -e 's/.*\/\(.*\)/\1/'`_venv
  if [ -d "$dir" ]; then
    source $dir/bin/activate
  else
    python -m venv $dir
    source $dir/bin/activate
    pip install -U pip
    pip install flake8 mypy
  fi
}
